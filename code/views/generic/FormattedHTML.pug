script.
	export html = null
	
	# Lines 1/2: Replace hardcoded "reddit.com" links with relative links --- if someone is using our client, they surely want Reddit links to open in our client as well.
	# Line 3: Display pictures instead of links where New Reddit does so.
	# Line 4: Normalize problematic <li>[TEXT NODE]<[ANY TAG]></li> markup from server (breaks CSS `:first-child` expectation).
	# Line 5: Remove paragraphs containing only empty spaces.
	# Lines 6/7: Inject table cell text content into cell `title` attributes. This allows using ellipses to manage layout for cells with large amounts of content.
	formatted = html
		.replace(/<a href="(?:https?:\/\/redd\.it)?\/(?<path>[^\/"]*)"[^>]*>/g, '<a href="/post/$<path>">')
		.replace(/<a href="https?:\/\/(?:(?:new|np|old|www)\.)?reddit\.com\/(?<path>[^"]*)"[^>]*>/g, '<a href="/$<path>">')
		.replace(/<a href="https:\/\/(?<subdomain>preview)\.redd\.it\/(?<filepath>[^"]+)">(?<linktext>[^<]*)<\/a>/g, '<a href="https://$<subdomain>.redd.it/$<filepath>" target="_blank"><img decoding="async" loading="eager" src="https://$<subdomain>.redd.it/$<filepath>"></a>')
		.replace(/<li>(?<text>[^<]+)/g, '<li><span>$<text></span>')
		.replace(/<p>&#x200B;<\/p>/g, '')
		.replace(/<th[^<]*>(?<text>.+)<\/th>/g, (match, text) ->
			"<th title='#{text.replace(/<[^>]+>/g, '')}'>#{text}</th>"
		)
		.replace(/<td[^<]*>(?<text>.+)<\/td>/g, (match, text) ->
			"<td title='#{text.replace(/<[^>]+>/g, '')}'>#{text}</td>"
		)

{@html formatted}