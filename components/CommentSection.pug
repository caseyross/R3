script.
	import { afterUpdate } from 'svelte'
	import { bubbleEvent } from '../scripts/dom/events.coffee'
	import { setScroll } from '../scripts/dom/useActions.coffee'
	import Comment from './Comment.pug'
	export comments = []
	export restoredScroll = 0
	export postId = ''
	export votes = {}
	scoreRange = [0, 0]
	computeStats = (comments) =>
		if comments?.length
			for comment in comments
				if comment.score < scoreRange[0]
					scoreRange[0] = comment.score
				else if comment.score > scoreRange[1]
					scoreRange[1] = comment.score
				computeStats(comment.replies)
	computeStats(comments)
	commentsContainer = null
	minimapCanvas = null
	minimapH = comments.length * 8 # TODO
	minimapW = 24
	drawMinimap = (target) =>
		ctx = minimapCanvas.getContext('2d')
		ctx.clearRect(0, 0, minimapW, minimapH)
		ctx.fillStyle = 'rgba(0, 0, 0, 0.5)'
		ctx.fillRect(10, 0, 4, minimapH)
		scrollFrac = (target.scrollTop or restoredScroll or 0) / target.scrollHeight
		pointerTop = Math.floor(scrollFrac * minimapH)
		ctx.fillRect(0, pointerTop, minimapW, Math.floor(minimapH * target.clientHeight / target.scrollHeight))
	afterUpdate(=> drawMinimap(commentsContainer))
	onScroll = (e) =>
		drawMinimap(commentsContainer)
		bubbleEvent(e)

section.scroll-tall.no-scrollbar#comments(bind:this={commentsContainer} on:scroll={onScroll} use:setScroll={restoredScroll} data-post-id={postId})
	{#each comments as comment}
		Comment(comment={comment} scoreRange={scoreRange} votes={votes})
	canvas.minimap(bind:this={minimapCanvas} width={minimapW} height={minimapH})

style.
	section
		position relative
		display flex
		flex-flow column nowrap
		padding-right 80px
		background inherit
	.minimap
		position fixed
		top 0
		right 8px