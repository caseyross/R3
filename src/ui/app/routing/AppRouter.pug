script.
	import AppExternalLink from './AppExternalLink.pug'

	import AppAccountContext from '../context/AppAccountContext.pug'
	import AppNetworkStatusContext from '../context/AppNetworkStatusContext.pug'
	import AppRadialMenuContext from '../context/AppRadialMenuContext.pug'
	import AppTableZoomContext from '../context/AppTableZoomContext.pug'
	import AppThemeColorContext from '../context/AppThemeColorContext.pug'

	import CollectionPage from '../../feature/collection/CollectionPage.pug'
	import DashboardPage from '../../feature/dashboard/DashboardPage.pug'
	import MultiredditPage from '../../feature/multireddit/MultiredditPage.pug'
	import SubredditPage from '../../feature/subreddit/SubredditPage.pug'
	import UserPage from '../../feature/user/UserPage.pug'
	import WikiPage from '../../feature/wiki/WikiPage.pug'
	
	import { parse_url } from './url.coffee'
	route = null

	set_route = ->
		route = Object.fromEntries(parse_url(location))
	external_navigate =
		(link) -> location.href = link.href
	external_navigate_new_tab =
		(link) -> window.open(link.href)
	internal_navigate =
		(link) ->
			history.pushState(null, null, new URL(link.href))
			set_route()

	is_external_new_tab_intent =
		(link) -> link.target is '_blank'
	is_same_hash =
		(link) -> link.hash is location.hash
	is_same_origin =
		(link) -> link.origin is origin
	is_same_path =
		(link) -> link.pathname is location.pathname
	is_unmodified_event =
		(event) -> not (event.altKey or event.ctrlKey or event.metaKey or event.shiftKey)
	is_unmodified_left_click =
		(event) -> is_unmodified_event(event) and event.button is 0 and event.detail > 0
	is_unmodified_enter_key_on_link =
		(event) -> is_unmodified_event(event) and event.key is 'Enter' and event.target.tagName is 'A'

	document.addEventListener('mousedown',
		(event) ->
			if is_unmodified_left_click(event)
				link = event.target.closest('a')
				if link and link.href
					if is_same_origin(link)
						if is_same_path(link) and not is_same_hash(link) then return # allow hash change scrolling behavior
						internal_navigate(link)
					else
						if is_external_new_tab_intent(link) then external_navigate_new_tab(link)
						else external_navigate(link)
	)

	document.addEventListener('click',
		(event) ->
			if is_unmodified_left_click(event)
				link = event.target.closest('a')
				if link
					if is_same_origin(link) and is_same_path(link) and not is_same_hash(link) then return
					event.preventDefault()
	)

	document.addEventListener('keydown',
		(event) ->
			if is_unmodified_enter_key_on_link(event)
				link = event.target
				if is_same_origin(link)
					if is_same_path(link) and not is_same_hash(link) then return
					internal_navigate(link)
				else
					if is_external_new_tab_intent(link) then external_navigate_new_tab(link)
					else external_navigate(link)
				event.preventDefault()
	)

	window.addEventListener('popstate', (event) ->
		set_route()
	)

	set_route()

AppAccountContext
	AppThemeColorContext
		AppNetworkStatusContext
			AppRadialMenuContext
				AppTableZoomContext
					{#if route.wikipage_name}
						{#key route.subreddit_name}
							{#key route.wikipage_name}
								{#key route.wikipage_version}
									WikiPage(page_name={route.wikipage_name} revision_id={route.wikipage_version} subreddit_name={route.subreddit_name})
					{:else if route.collection_short_id}
						CollectionPage(collection_short_id={route.collection_short_id} comment_short_id={route.post_focus_comment_short_id} comments_sort={route.post_comments_sort} post_short_id={route.post_short_id})
					{:else if route.multireddit_name}
						MultiredditPage(multireddit_name={route.multireddit_name} user_name={route.user_name} comment_short_id={route.post_focus_comment_short_id} comments_sort={route.post_comments_sort} post_short_id={route.post_short_id} posts_sort={route.feed_sort || (route.feed_search_query ? 'relevance' : 'hot')} posts_search_query={route.feed_search_query} posts_time_range={route.feed_time_range || 'all'})
					{:else if route.subreddit_name}
						{#key route.subreddit_name}
							SubredditPage(subreddit_name={route.subreddit_name} comment_parent_count={route.post_focus_comment_parent_count} comment_short_id={route.post_focus_comment_short_id} comments_sort={route.post_comments_sort} post_short_id={route.post_short_id} posts_sort={route.feed_sort || (route.feed_search_query ? 'relevance' : 'hot')} posts_search_query={route.feed_search_query} posts_time_range={route.feed_time_range || 'all'})
					{:else if route.user_name}
						UserPage(user_name={route.user_name} posts_sort={route.feed_sort || 'new'} posts_time_range={route.feed_time_range || 'all'} comment_short_id={route.post_focus_comment_short_id} comments_sort={route.post_comments_sort} post_short_id={route.post_short_id})
					{:else}
						AppExternalLink(original_url={location})