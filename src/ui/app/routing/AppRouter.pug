script.
	import AppRedirect from './AppRedirect.pug'

	import AppAccountContext from '../context/AppAccountContext.pug'
	import AppNetworkStatusContext from '../context/AppNetworkStatusContext.pug'
	import AppRadialMenuContext from '../context/AppRadialMenuContext.pug'
	import AppThemeColorContext from '../context/AppThemeColorContext.pug'

	import CollectionPage from '../../feature/collection/CollectionPage.pug'
	import ListingsPage from '../../feature/listings/ListingsPage.pug'
	import MultiredditPage from '../../feature/multireddit/MultiredditPage.pug'
	import SubredditPage from '../../feature/subreddit/SubredditPage.pug'
	import UserPage from '../../feature/user/UserPage.pug'
	import WikiPage from '../../feature/wiki/WikiPage.pug'
	
	import parse_route from './parse_route.coffee'
	route = null

	set_route =
		-> route = parse_route(location)
	external_navigate =
		(link) -> location.href = link.href
	external_navigate_new_tab =
		(link) -> window.open(link.href)
	internal_navigate =
		(link) ->
			history.pushState(null, null, new URL(link.href))
			set_route()

	is_external_new_tab_intent =
		(link) -> link.target is '_blank'
	is_same_hash =
		(link) -> link.hash is location.hash
	is_same_origin =
		(link) -> link.origin is origin
	is_same_path =
		(link) -> link.pathname is location.pathname
	is_unmodified_event =
		(event) -> not (event.altKey or event.ctrlKey or event.metaKey or event.shiftKey)
	is_unmodified_left_click =
		(event) -> is_unmodified_event(event) and event.button is 0 and event.detail > 0
	is_unmodified_enter_key_on_link =
		(event) -> is_unmodified_event(event) and event.key is 'Enter' and event.target.tagName is 'A'

	document.addEventListener('mousedown',
		(event) ->
			if is_unmodified_left_click(event)
				link = event.target.closest('a')
				if link and link.href
					if is_same_origin(link)
						if is_same_path(link) and not is_same_hash(link) then return # allow hash change scrolling behavior
						internal_navigate(link)
					else
						if is_external_new_tab_intent(link) then external_navigate_new_tab(link)
						else external_navigate(link)
	)

	document.addEventListener('click',
		(event) ->
			if is_unmodified_left_click(event)
				link = event.target.closest('a')
				if link
					if is_same_origin(link) and is_same_path(link) and not is_same_hash(link) then return
					event.preventDefault()
	)

	document.addEventListener('keydown',
		(event) ->
			if is_unmodified_enter_key_on_link(event)
				link = event.target
				if is_same_origin(link)
					if is_same_path(link) and not is_same_hash(link) then return
					internal_navigate(link)
				else
					if is_external_new_tab_intent(link) then external_navigate_new_tab(link)
					else external_navigate(link)
				event.preventDefault()
	)

	window.addEventListener('popstate', (event) ->
		set_route()
	)

	set_route()

{#if route.format === 'official_site'}
	AppRedirect(url='https://www.reddit.com{route.path}')
{:else}
	AppAccountContext
		AppThemeColorContext
			AppNetworkStatusContext
				AppRadialMenuContext
					{#if route.format === 'collection'}
						CollectionPage(collection_short_id={route.listing.collection_short_id} comment_short_id={route.selection.comment_short_id} comments_sort={route.selection.comments_sort} post_short_id={route.selection.post_short_id})
					{:else if route.format === 'listings'}
						ListingsPage(type={route.listings_type})
					{:else if route.format === 'multireddit'}
						MultiredditPage(multireddit_name={route.listing.multireddit_name} user_name={route.listing.user_name} posts_sort={route.listing.posts_sort} comment_short_id={route.selection.comment_short_id} comments_sort={route.selection.comments_sort} post_short_id={route.selection.post_short_id})
					{:else if route.format === 'subreddit'}
						{#key route.listing.subreddit_name}
							SubredditPage(subreddit_name={route.listing.subreddit_name} posts_sort={route.listing.posts_sort} comment_short_id={route.selection.comment_short_id} comments_sort={route.selection.comments_sort} post_short_id={route.selection.post_short_id})
					{:else if route.format === 'user'}
						UserPage(user_name={route.listing.user_name} posts_sort={route.listing.posts_sort} comment_short_id={route.selection.comment_short_id} comments_sort={route.selection.comments_sort} post_short_id={route.selection.post_short_id})
					{:else if route.format === 'wiki'}
						{#key route.listing.subreddit_name}
							{#key route.selection.wikipage_name}
								{#key route.selection.wikipage_revision_id}
									WikiPage(page_name={route.selection.wikipage_name} revision_id={route.selection.wikipage_revision_id} subreddit_name={route.listing.subreddit_name})