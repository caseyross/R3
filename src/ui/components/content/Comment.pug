script.
	import api from '../../../api/index.js'
	import StringFormat from '../../tools/StringFormat.coffee'
	import ActionText from '../system/ActionText.pug'
	import Avatar from './Avatar.pug'
	export id = null
	comment = null
	api.watch(id, (x) -> { data: comment } = x)

{#if comment}
	.comment-tree
		article.comment(role='comment')
			.comment-author
				Avatar(username={comment.author})
			.comment-body
				{@html StringFormat.commentBody(comment.body_html)}
			.comment-score
				button.score-button {StringFormat.score(comment.score_hidden || comment.score)}
		{#if comment.replies.length > 0}
			ol.comment-replies
				{#each comment.replies as replyId}
					svelte:self(id={replyId})
				{#if comment.more_replies}
					.comment-expand-replies
						ActionText(text='More replies...')
				{#if comment.deeper_replies}
					.comment-expand-replies
						ActionText(text='Continue this thread...')

style.
	.comment
		display flex
		gap 1ch
		position relative
		width 400px
	.comment-body
		background rgba(0,0,0,0.025)
		border-radius 1ch
		flex 1
		font 10pt arial
		letter-spacing 0
		padding 1ch
		overflow-wrap anywhere
	:global(.comment-body img)
		border-radius 4px
		display inline
		filter grayscale(1)
		margin-inline-start 1px
		max-height 4em
		width auto
	.comment-expand-replies
		margin-top 1em
	.comment-replies
		border-left 1px solid gainsboro
		margin-inline-start 1em
		padding-inline-start 3ch
	.comment-score
		font-size 13px
		font-weight bold
		left 100%
		opacity 0.3
		padding 1ch
		position absolute
		text-transform uppercase
		top 0
	.comment-tree
		margin-top 2em
	.score-button
		&:active
			background rgba(0,0,0,0.3)