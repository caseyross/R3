script.
	import { relativize_url } from '../../app/routing/AppURL.coffee'

	import Button from '../../common/Button.pug'
	import TextHTML from '../../common/TextHTML.pug'

	import PostFlair from '../post/PostFlair.pug'
	import SubredditTag from './SubredditTag.pug'

	export widget = null

.subreddit-widget
	{#if widget.kind === 'button'}
		header.subreddit-widget-title {widget.shortName}
		ol.subreddit-widget-links
			{#each widget.buttons as button}
				Button(link={relativize_url(button.url)} text={button.text})
	{:else if widget.kind === 'community-list'}
		header.subreddit-widget-title {widget.shortName}
		ol.subreddit-widget-related-subreddits
			{#each widget.data as subreddit}
				SubredditTag(name={subreddit.name})
	{:else if widget.kind === 'image'}
		{@const image = widget.data[0]}
			{#if image.linkUrl}
				a(href={relativize_url(image.linkUrl)})
					img.subreddit-widget-image(alt={widget.shortName} src={image.url} style='aspect-ratio: {image.width}/{image.height}')
			{:else}
				a(href={image.url})
					img.subreddit-widget-image(alt={widget.shortName} src={image.url} style='aspect-ratio: {image.width}/{image.height}')
	{:else if widget.kind === 'post-flair'}
		header.subreddit-widget-title Filter by Flair
		ol.subreddit-widget-post-flairs
			{#each widget.order.map(x => widget.templates[x]) as flair}
				a(href="?f=flair_name:'{flair.text}'")
					PostFlair(color={flair.backgroundColor} emoji_style='image' rich_text={flair.richtext} text={flair.text})
	{:else if widget.kind === 'textarea'}
		header.subreddit-widget-title {widget.shortName}
		TextHTML(html={widget.textHtml})

style.
	.subreddit-widget-links
		display flex
		flex-flow row wrap
		gap 10px
	.subreddit-widget-post-flairs
		display flex
		flex-flow row wrap
		gap 10px
	.subreddit-widget-related-subreddits
		display flex
		flex-flow column nowrap
		gap 10px
	.subreddit-widget-title
		font-weight 900
		margin-bottom 1em