script.
	import { getContext } from 'svelte'
	import api from '../../../api/index.js'
	import { Time } from '../../../lib/index.js'
	
	import { format_url } from '../../app/routing/url.coffee'
	import Button from '../../common/Button.pug'
	import FormattedHTML from '../../common/FormattedHTML.pug'
	import UserByline from '../user/UserByline.pug'

	export id = null
	export out_of_context = false
	
	comment = null
	focus_comment_id = getContext('focus_comment_id')
	more_replies_loading = false
	api.loadWatch(api.ID('comment', id),
		(x) ->
			{ data: comment } = x
			if comment?.more_replies
				api.watch(comment.more_replies_id,
					(x) -> { loading: more_replies_loading } = x
				)
	)

	vote = (current_vote, mouse_button_number) ->
		new_vote = 
			switch mouse_button_number
				when 0 # left
					if current_vote is 1 then 0 else 1
				when 2 # right
					if current_vote is -1 then 0 else -1
		if new_vote != current_vote
			api.submit(api.ID('comment_vote', id), { numerical_vote: new_vote })

{#if comment}
	li(class={out_of_context ? 'comment-clip' : 'comment-tree'})
		<!-- 'comment' role is draft status and not recognized yet -->
		<!-- svelte-ignore a11y-unknown-role -->
		article.comment(class:comment-deleted={(comment.author === '[deleted]' && comment.body[0] === '[') || comment.removal_reason} class:comment-downvoted={comment.likes === false} class:comment-highlighted={id === focus_comment_id} class:comment-upvoted={comment.likes === true} class:comment-with-low-score={!comment.score_hidden && comment.score < 1} data-id={id} data-locked={comment.locked || null} data-radial-menu='comment' data-saved={comment.saved || null} role='comment' title={comment.edited ? Time.sToAbsRelTimeStr(comment.created_utc) + ' (edited ' + Time.sToAbsRelTimeStr(comment.edited) + ')' : Time.sToAbsRelTimeStr(comment.created_utc)})
			button.comment-score(on:mousedown={e => vote(comment.likes === true ? 1 : comment.likes === false ? -1 : 0, e.button)}) {comment.score_hidden ? '?' : comment.score}
			FormattedHTML(html={comment.body_html})
			aside.comment-user-info
				UserByline(distinguish={comment.distinguished || (comment.is_submitter && 'submitter')} flair_color={comment.author_flair_background_color} flair_rich_text={comment.author_flair_richtext} flair_text={comment.author_flair_text} name={comment.author})
		{#if out_of_context}
			cite.comment-source-info
				Button(link={format_url({ post_focus_comment_parent_count: 3, post_focus_comment_id: id, post_id: comment.link_id.slice(3), subreddit_name: comment.subreddit })} text='View in context â†’')
		{:else}
			ol.comment-replies
				{#if comment.replies.length > 0}
					{#each comment.replies as reply_id (reply_id)}
						svelte:self(id={reply_id})
				{#if comment.num_more_replies > 0}
					menu.comment-more-replies
						Button(action={() => api.load(comment.more_replies_id)} icon_plus={true} loading={more_replies_loading} text="{comment.num_more_replies} more")
				{#if comment.deeper_replies}
					menu.comment-more-replies
						Button(link='/r/{comment.subreddit}/post/{comment.link_id.slice(3)}/comment/{id}' text='Continue thread...')

style.
	.comment-user-info
		bottom 100%
		left 0
		opacity 0
		position absolute
		.comment:hover &
			opacity 1
	.comment
		display inline-block
		margin 0.666em 1em
		max-width 360px
		position relative
	:global(.comment > .md)
		background var(--c-subreddit-theme)
		border-radius 12px
		color var(--c-subreddit-theme-text)
		display inline-block
		padding 12px
	:global(.comment > .md img)
		border-radius 6px
		margin 0
		max-height 64px
		width auto
	:global(.comment-deleted > .md)
		opacity 0.25
		pointer-events none
	:global(.comment-highlighted > .md)
		outline 1px solid
	:global(.comment-with-low-score:not(.comment-deleted) > .md)
		opacity 0.5
	.comment-clip
		display flex
	.comment-more-replies
		padding 0.666em 0
	.comment-replies
		border-left 1px solid var(--c-blend-normal)
		padding-left 2em
	.comment-score
		color var(--c-text-weak)
		position absolute
		right calc(100% + 2ch)
		.comment-upvoted &
			color salmon
		.comment-downvoted &
			color var(--c-text-faint)
	.comment-source-info
		margin 0.666em 1em