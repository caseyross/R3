script.
	import api from '../../../api/index.js'
	import { Time } from '../../../lib/index.js'
	import { format_url } from '../../app/routing/url.coffee'

	import HotnessMeter from '../../common/HotnessMeter.pug'
	import SubredditNameTag from '../subreddit/SubredditNameTag.pug'
	import PostFlair from './PostFlair.pug'

	export post_short_id = null
	export show_subreddit = false
	
	post = api.read(api.ID('post', post_short_id))?.data
	if !post
		api.loadWatch(api.ID('post', post_short_id, 'confidence', 25), (x) ->
			{ data: post } = x
		)
	else if post.num_comments > 0 and !post.replies?.length
		api.preload(api.ID('post', post_short_id, post.suggested_sort or 'confidence', 25), (x) ->
			{ data: post } = x
		)

	vote = (current_vote, mouse_button_number) ->
		new_vote = 
			switch mouse_button_number
				when 0 # left
					if current_vote is 1 then 0 else 1
				when 2 # right
					if current_vote is -1 then 0 else -1
		if new_vote != current_vote
			api.submit(api.ID('post_vote', short_id), { numerical_vote: new_vote })

{#if post}
	a.post-link(class:post-downvoted={post.likes === false} class:post-nsfw={post.over_18} class:post-stickied={post.stickied} class:post-upvoted={post.likes === true} class:post-with-low-score={post.score < 1} data-likes={post.likes} data-radial-menu='post' data-short_id={post_short_id} href={format_url({ post_short_id, subreddit_name: post.subreddit })} title={post.edited ? Time.sToAbsRelTimeStr(post.created_utc) + ' (edited ' + Time.sToAbsRelTimeStr(post.edited) + ')' : Time.sToAbsRelTimeStr(post.created_utc)})
		{#if show_subreddit}
			SubredditNameTag(name={post.subreddit})
		{:else if post.link_flair_text}
			PostFlair(color={post.link_flair_background_color} emoji_style='image' rich_text={post.link_flair_richtext} text={post.link_flair_text})
		HotnessMeter(create_time={post.created_utc} edit_time={post.edited} num_comments={post.num_comments} score={post.score})
		h1.post-link-title(class:md-spoiler-text={post.spoiler}) {post.title}
		button.post-link-score(on:mousedown={e => vote(post.likes === true ? 1 : post.likes === false ? -1 : 0, e.button)}) {post.hide_score ? '?' : post.score} ({post.num_comments}) 

style.
	.post-link
		align-items flex-start
		display flex
		flex-flow column nowrap
		gap 6px
		position relative
		&.post-with-low-score
			opacity 0.5
	.post-link-score
		align-items center
		color var(--c-text-weak)
		display flex
		gap 6px
		position absolute
		right calc(100% + 1em)
		white-space pre
		.post-upvoted &
			color salmon
		.post-downvoted &
			color var(--c-text-faint)
	.post-link-title
		font-size 16px
		font-weight inherit
		margin 0
		overflow-wrap anywhere