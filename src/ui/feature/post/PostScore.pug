script.
	export awards = null
	export controversiality = 0
	export upload_vote = -> {}
	export value = null
	export vote = 0
	toggle_downvote = ->
		if vote == -1 then upload_vote(0)
		else upload_vote(-1)
	toggle_upvote = ->
		if vote == 1 then upload_vote(0)
		else upload_vote(1)

button.post-score(class:post-score-downvoted={vote == -1} class:post-score-upvoted={vote == 1} on:click={() => toggle_upvote()} on:contextmenu={(e) => { e.preventDefault(); toggle_downvote() }}) {controversiality > 0 ? '◆' : ''}
	span.post-score-votes
		{#if Number.isFinite(value)}
			{#if value < 0}
				| −{Math.abs(value)}
			{:else}
				| {value}
		{:else}
			| ?
	{#if awards?.length}
		span.post-score-awards(title={'awarded: ' + awards.map(award => award.name + ' (' + award.count + ')').join(', ')}) ★{awards.reduce((a, b) => a + b.count, 0)}

style.
	.post-score
		font-size 12px
		font-weight bold
		user-select none
	.post-score-awards
		color goldenrod
	.post-score-votes
		opacity 0.5
		&:hover
			opacity 0.8
		.post-score-downvoted > &
			opacity 0.2
		.post-score-upvoted > &
			opacity 1