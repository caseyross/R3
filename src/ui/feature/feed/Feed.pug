script.
	import api from '../../../api/index.js'
	
	import StatTracker from '../../common/StatTracker.coffee'
	import Button from '../../common/Button.pug'
	import Label from '../../common/Label.pug'

	import PostLink from '../post/PostLink.pug'
	import SubredditSidebar from '../subreddit/SubredditSidebar.pug'
	import FeedPostListControls from './FeedPostListControls.pug'

	export collection_id = null
	export multireddit_name = null
	export page_size = 10
	export search_query = null
	export sort = null
	export subreddit_name = null
	export time_range = null
	export type = null
	export user_name = null

	base_page_id = switch type
		when 'collection'
			api.ID('collection', collection_id)
		when 'multireddit'
			if search_query
				api.ID('search_posts', "multireddit=#{user_name}-#{multireddit_name}+#{search_query}", time_range, sort, page_size)
			else
				api.ID('multireddit_posts', user_name, multireddit_name, time_range, sort, page_size)
		when 'subreddit'
			if search_query
				api.ID('search_posts', "subreddit=#{subreddit_name}+#{search_query}", time_range, sort, page_size)
			else
				api.ID('subreddit_posts', subreddit_name, time_range, sort, page_size)
		when 'user'
			api.ID('user_posts', user_name, time_range, sort, page_size)
	error = null
	has_next_page = false
	loading = null
	ids = []
	read = []

	load_next_page = ->
		after_id = ids.at(-1)
		page_id = api.ID(base_page_id, after_id)
		api.loadWatch(page_id, (x) ->
			{ error, data, loading } = x
			if !error and !loading and data
				ids_subset = data?.posts or data
				new_ids = ids_subset.filter((x) -> !ids.includes(x))
				ids = ids.concat(new_ids)
				read = read.concat(new_ids.map((x) -> StatTracker.check_post_read(x)))
				has_next_page =
					if ids_subset.length < page_size
						false
					else
						true
		)

	load_next_page()

svelte:head
	{#if type === 'collection'}
		title collection {collection_id}
	{:else if type === 'multireddit'}
		title {multireddit_name}
	{:else if type === 'subreddit'}
		title {subreddit_name}
	{:else if type === 'user'}
		title {user_name}
nav.feed
	{#if type !== 'collection'}
		FeedPostListControls(feed_type={type} multireddit_name={multireddit_name} subreddit_name={subreddit_name} user_name={user_name} search_query={search_query} sort={sort} time_range={time_range})
	{#if loading}
		.feed-loading-notification Loading...
	{:else}
		{#if type === 'collection' || type === 'multireddit' || type === 'subreddit' || type === 'user'}
			{#if ids.length === 0}
				.feed-post-list-empty No posts.
			{:else if !search_query && read.every((x) => x === true)}
				.feed-post-list-no-unreads You've read all the posts on this page.
			{:else}
				ol.feed-post-list
					{#each ids as post_id, i (post_id)}
						{#if !search_query && !read[i]}
							PostLink(post_id={post_id} show_subreddit={type !== 'subreddit'})
	menu.feed-post-list-actions
		{#if has_next_page}
			Label(text={error ? 'Error: ' + (error.reason || error.message) : ''})
				Button(action={() => load_next_page()} loading={loading} text={error ? 'Retry' : 'More'})
	{#if type === 'subreddit'}
		{#key subreddit_name}
			SubredditSidebar(name={subreddit_name})

style.
	.feed
		display flex
		flex-flow column nowrap
		gap 1em
		width 240px
	.feed-post-list
		display flex
		flex-flow column nowrap
		gap 1em