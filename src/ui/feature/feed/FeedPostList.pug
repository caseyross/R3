script.
	import api from '../../../api/index.js'
	import { format_url } from '../../app/routing/url.coffee'
	
	import Button from '../../common/Button.pug'
	import PostHeadline from '../post/PostHeadline.pug'

	export feed_type = null
	export collection_short_id = null
	export multireddit_name = null
	export subreddit_name = null
	export user_name = null
	export search_query = null
	export sort = null
	export time_range = null
	
	export page_size = 10

	export selected_post_short_id = null

	base_page_id = switch feed_type
		when 'collection'
			api.ID('collection', collection_short_id)
		when 'multireddit'
			if search_query
				api.ID('search_posts', "multireddit=#{user_name}-#{multireddit_name}+#{search_query}", time_range, sort, page_size)
			else
				api.ID('multireddit_posts', user_name, multireddit_name, time_range, sort, page_size)
		when 'subreddit'
			if search_query
				api.ID('search_posts', "subreddit=#{subreddit_name}+#{search_query}", time_range, sort, page_size)
			else
				api.ID('subreddit_posts', subreddit_name, time_range, sort, page_size)
		when 'user'
			api.ID('user_posts', user_name, time_range, sort, page_size)
	has_next_page = false
	pages = []

	load_page = (page_number) ->
		if page_number > 0
			after_short_id = pages[page_number - 1].posts.at(-1)
			page_id = api.ID(base_page_id, after_short_id)
		else
			page_id = base_page_id
		api.loadWatch(page_id, ({ data, error, loading }) ->
			pages[page_number] = { error, loading, posts: data?.posts or data }
			if data and feed_type != 'collection' # collections don't have pagination
				if page_number == pages.length - 1 # loaded page is last page?
					if page_number is 0
						if data.length >= page_size
							has_next_page = true
					else
						if data.length < page_size
							has_next_page = false
		)

	load_page(0)

ol.feed-post-list
	{#each pages as page}
		{#if page.error}
			p Error: {page.error.reason || page.error.message}
		{:else if page.posts}
			{#each page.posts as post_short_id}
				a(href={format_url({ collection_short_id, feed_search_query: search_query, feed_sort: sort, feed_time_range: time_range, feed_type: feed_type, multireddit_name, post_short_id, subreddit_name, user_name })})
					PostHeadline(post_short_id={post_short_id} selected={post_short_id === selected_post_short_id} show_subreddit={feed_type !== 'subreddit'})
menu.feed-post-list-actions
	{#if has_next_page}
		Button(action={() => load_page(pages.at(-1).posts ? pages.length : pages.length - 1)} loading={pages.at(-1)?.loading} text='More')

style.
	.feed-post-list
		display flex
		flex-flow column nowrap
	.feed-post-list-actions
		display flex
		justify-content flex-end