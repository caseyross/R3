script.
	import Post from '../product/post/Post.pug'
	import Subreddit from '../product/subreddit/Subreddit.pug'
	import parseRoute from './parseRoute.coffee'
	route = parseRoute(location)
	navigate = (url, options = { replace: false }) ->
		if options.replace
			history.replaceState(null, null, url)
		else
			history.pushState(null, null, url)
	document.addEventListener('mousedown',
		(event) ->
			if event.button is 0 and not (event.altKey or event.ctrlKey or event.metaKey or event.shiftKey)
				parentLink = event.target.closest('a')
				if parentLink?
					if parentLink.origin is origin
						navigate(new URL(parentLink.href))
						route = parseRoute(location)
						event.preventDefault()
					else
						location.href = parentLink.href
						event.preventDefault())
	document.addEventListener('keydown',
		(event) ->
			if event.key is 'Enter' and not (event.altKey or event.ctrlKey or event.metaKey or event.shiftKey) and event.target.tagName is 'A' and event.target.origin is origin
				navigate(new URL(event.target.href))
				route = parseRoute(location)
				event.preventDefault())
	window.addEventListener('popstate',
		(event) ->
			route = parseRoute(location)
			event.preventDefault())

{#if route.path === 'post'}
	Post(shortId={route.data.post_short_id})
{:else if route.path === 'subreddit'}
	Subreddit(name={route.data.subreddit_name} sort={route.data.posts_sort})
{:else}
	h1 The requested page is not supported yet.
	dl
		dt Page type:
		dd {route.path}
		dt Data:
		dd
			{#if route.data === null}
				| [null]
			{:else}
				dl
					{#each Object.keys(route.data) as key}
						dt {key}:
						dd {route.data[key]}

style.
	dd
		font-weight bold