script.
	import All from '../product/multireddit/All.pug'
	import Button from '../product/generic/Button.pug'
	import Home from '../product/multireddit/Home.pug'
	import Multireddit from '../product/multireddit/Multireddit.pug'
	import Popular from '../product/multireddit/Popular.pug'
	import Post from '../product/post/Post.pug'
	import Subreddit from '../product/subreddit/Subreddit.pug'
	import User from '../product/user/User.pug'
	import Wiki from '../product/wiki/Wiki.pug'
	import parseRoute from './parseRoute.coffee'
	route = parseRoute(location)
	navigate = (url, options = { replace: false }) ->
		if options.replace
			history.replaceState(null, null, url)
		else
			history.pushState(null, null, url)
	document.addEventListener('mousedown',
		(event) ->
			if event.button is 0 and not (event.altKey or event.ctrlKey or event.metaKey or event.shiftKey)
				parentLink = event.target.closest('a')
				if parentLink?
					if parentLink.origin is origin
						if parentLink.pathname != location.pathname
							navigate(new URL(parentLink.href))
							route = parseRoute(location)
							event.preventDefault()
					else
						location.href = parentLink.href
						event.preventDefault())
	document.addEventListener('keydown',
		(event) ->
			if event.key is 'Enter' and not (event.altKey or event.ctrlKey or event.metaKey or event.shiftKey) and event.target.tagName is 'A' and event.target.origin is origin and event.target.pathname != location.pathname
				navigate(new URL(event.target.href))
				route = parseRoute(location)
				event.preventDefault())
	window.addEventListener('popstate',
		(event) ->
			route = parseRoute(location)
			event.preventDefault())

{#key route}
	{#if route.data.listing_prev_url}
		Button(key='a' link={route.data.listing_prev_url} text='Previous list item')
	{#if route.data.listing_next_url}
		Button(key='d' link={route.data.listing_next_url} text='Next list item')
	{#if route.path === 'all'}
		All(posts_sort={route.data.posts_sort})
	{:else if route.path === 'home'}
		Home(posts_sort={route.data.posts_sort})
	{:else if route.path === 'multireddit'}
		Multireddit(name={route.data.multireddit_name} posts_sort={route.data.posts_sort} user_name={route.data.user_name})
	{:else if route.path === 'popular'}
		Popular(posts_sort={route.data.posts_sort})
	{:else if route.path === 'post'}
		Post(shortId={route.data.post_short_id})
	{:else if route.path === 'subreddit'}
		Subreddit(name={route.data.subreddit_name} sort={route.data.posts_sort})
	{:else if route.path === 'user'}
		User(items_filter={route.data.items_filter} items_sort={route.data.items_sort} user_name={route.data.user_name})
	{:else if route.path === 'wiki'}
		Wiki(page_name={route.data.page_name} revision_id={route.data.revision_id} subreddit_name={route.data.subreddit_name})
	{:else}
		h1 The requested page is not supported yet.
		dl
			dt Page type:
			dd {route.path}
			dt Data:
			dd
				{#if route.data === null}
					| [null]
				{:else}
					dl
						{#each Object.keys(route.data) as key}
							dt {key}:
							dd {route.data[key]}

style.
	dd
		font-weight bold