script.
	import { getContext } from 'svelte'
	import api from '../../../api/index.js'
	
	import Button from '../../framework/Button.pug'
	import TextHTML from '../../framework/TextHTML.pug'

	import UserAvatar from '../user/UserAvatar.pug'
	import UserDistinguish from '../user/UserDistinguish.pug'

	import PostAge from './PostAge.pug'
	import PostScore from './PostScore.pug'
	
	export out_of_context = false
	export short_id = null
	
	comment = null
	focus_comment_short_id = getContext('focus_comment_short_id')
	more_replies_loading = false
	api.loadWatch(api.ID('comment', short_id),
		(x) ->
			{ data: comment } = x
			if comment?.more_replies
				api.watch(comment.more_replies_id,
					(x) -> { loading: more_replies_loading } = x
				)
	)

{#if comment}
	li(class={out_of_context ? 'comment-clip' : 'comment-tree'})
		{#if out_of_context}
			.comment-context
				a(href='/r/{comment.subreddit}') {comment.subreddit}
				span :
				a(href='/r/{comment.subreddit}/post/{comment.link_id.slice(3)}/comment/{short_id}') {comment.link_title}
		<!-- 'comment' role is draft status and not recognized yet -->
		<!-- svelte-ignore a11y-unknown-role -->
		article.comment(role='comment')
			section.comment-body
				TextHTML(html={comment.body_html})
				{#if short_id === focus_comment_short_id}
					.comment-focus-marker(title='Highlighted comment') â˜…
				.comment-author
					UserAvatar(name={comment.author})
			header
				{#if comment.distinguished || comment.is_submitter}
					UserDistinguish(type={comment.distinguished || 'submitter'})
				PostAge(created={comment.created_utc} edited={comment.edited})
			footer(style='visibility:hidden')
				PostScore(awards={comment.all_awardings} controversiality={comment.controversiality} upload_vote={(vote) => api.submit(api.ID('comment_vote', short_id), { numerical_vote: vote })} value={!comment.score_hidden && comment.score} vote={comment.likes == null ? 0 : comment.likes ? 1 : -1})
		{#if !out_of_context}
			ol.comment-replies
				{#if comment.replies.length > 0}
					{#each comment.replies as reply_short_id}
						svelte:self(short_id={reply_short_id})
				{#if comment.num_more_replies > 0}
					.comment-more-replies
						Button(action={() => api.load(comment.more_replies_id)} loading={more_replies_loading} text="{comment.num_more_replies} {comment.num_more_replies === 1 ? 'reply' : 'replies'}")
				{#if comment.deeper_replies}
					.comment-more-replies
						Button(link='/r/{comment.subreddit}/post/{comment.link_id.slice(3)}/comment/{short_id}' text='Continue thread...')

style.
	.comment
		align-items flex-start
		display flex
		flex-flow column nowrap
		gap 5px
	.comment > footer
		align-items center
		align-self stretch
		display flex
		gap 1ch
		justify-content flex-end
		padding 0 1ch
	.comment > header
		align-items center
		display flex
		gap 1ch
	.comment-author
		bottom -11px
		position absolute
		right -16px
	.comment-body
		background rgba(255,255,255,0.1)
		border-radius 10px
		padding 10px
		position relative
	:global(.comment-body img)
		border-radius 9px
		margin 1px
		max-height 9em
		width auto
	.comment-clip
		background #494949
		border-radius 10px
		padding 1ch
	.comment-focus-marker
		align-items center
		border 2px solid
		border-radius 50%
		cursor default
		display flex
		font-size 12px
		height 22px
		justify-content center
		left -10px
		position absolute
		top -8px
		width 22px
	.comment-more-replies
		margin-bottom 20px
	.comment-replies
		margin-top 10px
		padding-left 30px