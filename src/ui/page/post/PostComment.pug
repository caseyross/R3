script.
	import api from '../../../api/index.js'
	import { Time } from '../../../lib/index.js'
	
	import Button from '../../framework/Button.pug'
	import TextHTML from '../../framework/TextHTML.pug'

	import UserAvatar from '../user/UserAvatar.pug'
	import UserDistinguish from '../user/UserDistinguish.pug'

	import PostScore from './PostScore.pug'
	
	export out_of_context = false
	export short_id = null
	
	comment = null
	more_replies_loading = false
	api.loadWatch(api.ID('comment', short_id),
		(x) ->
			{ data: comment } = x
			if comment?.more_replies
				api.watch(comment.more_replies_id,
					(x) -> { loading: more_replies_loading } = x
				)
	)

{#if comment}
	li(class={out_of_context ? 'comment-clip' : 'comment-tree'})
		{#if out_of_context}
			.comment-context
				a(href='/r/{comment.subreddit}') {comment.subreddit}
				span :
				a(href='/r/{comment.subreddit}/post/{comment.link_id.slice(3)}/comment/{short_id}') {comment.link_title}
		<!-- 'comment' role is draft status and not recognized yet -->
		<!-- svelte-ignore a11y-unknown-role -->
		article.comment(role='comment')
			div
			div
				PostScore(awards={comment.all_awardings} controversiality={comment.controversiality} upload_vote={(vote) => api.submit(api.ID('comment_vote', short_id), { numerical_vote: vote })} value={!comment.score_hidden && comment.score} vote={comment.likes == null ? 0 : comment.likes ? 1 : -1})
			div
				UserAvatar(name={comment.author})
				{#if comment.distinguished || comment.is_submitter}
					UserDistinguish(type={comment.distinguished || 'submitter'})
			.comment-text(title='posted {Time.sToRelDateStr(comment.created_utc, { abbr: false })} ago ({Time.sToAbsDateStr(comment.created_utc)})')
				TextHTML(html={comment.body_html})
		{#if !out_of_context && comment.replies.length > 0}
			{#key comment.replies}
				ol.comment-replies
					{#each comment.replies as reply_short_id}
						svelte:self(short_id={reply_short_id})
					{#if comment.more_replies}
						Button(action={() => api.load(comment.more_replies_id)} loading={more_replies_loading} text="Load {comment.num_more_replies} more")
					{#if comment.deeper_replies}
						.comment-more-replies
							Button(text='Continue this thread...')

style.
	.comment
		align-items flex-start
		display grid
		gap 0 10px
		grid-template-columns 20px 1fr
		grid-template-rows 24px 1fr
		justify-items flex-start
	.comment-clip
		background #494949
		border-radius 10px
		padding 1ch
	.comment-replies
		border-left 1px solid #666
		margin-left 9px
		margin-top 10px
		padding-left 12px
	.comment-text
		background #555
		border-radius 10px
		padding 1ch
	:global(.comment-text img)
		border-radius 6px
		display inline
		margin-block-start 1px
		margin-inline-start 1px
		max-height 9em
		width auto
	.comment-tree
		display block
		margin-top 10px