script.
	import { getContext, setContext } from 'svelte';
	import api from '../../../api/index.js'

	import Button from '../../framework/Button.pug'
	import ButtonGroup from '../../framework/ButtonGroup.pug'
	import PostComment from './PostComment.pug'
	
	export focus_comment_context_level = null
	export focus_comment_short_id = null
	export post_short_id = null
	export sort = 'best'

	more_replies_loading = false
	post = null
	profile_data_loaded = false
	if focus_comment_short_id
		setContext('focus_comment_short_id', focus_comment_short_id)
	api.loadWatch(
		api.ID('post', post_short_id, sort, 200, focus_comment_short_id, focus_comment_context_level),
		(x) ->
			{ data: post, error, loading } = x
			if post?.contributors?.length
				api.loadWatch(api.ID('users', post.contributors),
					(x) -> if x.data or x.error then profile_data_loaded = true
				)
			if post?.more_replies
				api.watch(post.more_replies_id,
					(x) -> { loading: more_replies_loading } = x
				)
	)

ol.post-comments-list
	{#if post && profile_data_loaded}
		{#each post.replies as reply_short_id}
			PostComment(short_id={reply_short_id})
		{:else}
			p [No comments to show.]
		{#if post.num_more_replies > 0}
			.post-more-replies
				Button(action={() => api.load(post.more_replies_id)} loading={more_replies_loading} text="{post.num_more_replies} {post.num_more_replies === 1 ? 'reply' : 'replies'}")

style.
	.post-comments-list
		margin-top 2em