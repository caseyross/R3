script.
	import api from '../../../api/index.js'

	import Button from '../../framework/Button.pug'
	import PostTag from '../post/PostTag.pug'
	
	export short_id = null
	
	post = null
	api.loadWatch(api.ID('post', short_id),
		(x) ->
			{ data: post } = x
			if post?.contributors?.length then api.load(api.ID('users', post.contributors))
	)

{#if post}
	a.listing-post(class:listing-post-visited={localStorage['visited.' + short_id]} href='/r/{post.subreddit.toLowerCase()}/post/{short_id}')
		.listing-post-tags
			{#if post.archived}
				PostTag(name='archived')
			{#if post.locked}
				PostTag(name='locked')
			{#if post.quarantine}
				PostTag(name='quarantined')
			{#if post.over_18}
				PostTag(name='nsfw')
			{#if post.stickied}
				PostTag(name='sticky')
			{#if post.is_original_content}
				PostTag(name='oc')
		h1.listing-post-title(class:md-spoiler-text={post.spoiler}) {post.title}
		.listing-post-stats
			.listing-post-comment-count {post.num_comments} comments
				{#if localStorage['visited.' + short_id]}
					{@const num_new_comments = post.num_comments - localStorage['visited.' + short_id].split(' ')[1]}
						{#if num_new_comments > 0}
							| ({num_new_comments} new)

style.
	.listing-post
		display grid
		gap 5px
		padding 10px
		&.listing-post-visited
			color var(--c-text-weak)
	.listing-post-stats
		color var(--c-text-weak)
	.listing-post-tags
		align-items center
		display flex
		gap 3px
	.listing-post-title
		font-size 19px
		font-weight inherit
		line-height 1.4