script.
	import { getContext } from 'svelte'

	import api from '../../../api/index.js'
	
	import Feed from './Feed.pug'
	import Status from '../common/Status.pug'

	export collection_id = null
	export multireddit_name = null
	export subreddit_name = null
	export user_name = null

	error = false
	loading = false
	info = null
	set_theme_color = getContext('set_theme_color')

	switch
		when collection_id
			api.loadWatch(api.ID('collection', collection_id), (x) ->
				{ data: info, error, loading } = x
			)
		when multireddit_name
			api.loadWatch(api.ID('multireddit', user_name, multireddit_name), (x) ->
				{ data: info, error, loading } = x
			)
		when subreddit_name
			api.loadWatch(api.ID('subreddit', subreddit_name), (x) ->
				{ data: info, error, loading } = x
			)
		when user_name
			api.loadWatch(api.ID('user', user_name), (x) ->
				{ data: info, error, loading } = x
			)
	
	if subreddit_name
		api.loadWatch(api.ID('subreddit', subreddit_name), ({ data: subreddit }) ->
			set_theme_color(subreddit?.primary_color || subreddit?.key_color)
		)
	else
		set_theme_color()

svelte:head
	{#key info}
		{#if collection_id}
			title {info?.title || collection_id}
		{:else if multireddit_name}
			title {info?.display_name || multireddit_name}
		{:else if subreddit_name}
			title {info?.display_name || subreddit_name}
		{:else if user_name}
			title u/{info?.name || user_name}
{#if error}
	article.feed-summary
		{#if error.code === 403}
			{#if multireddit_name}
				Status(type='error' message="Only approved users can access this multireddit." title="Private multireddit")
			{:else if subreddit_name}
				Status(type='error' message="Only approved users can access this subreddit." title="Private subreddit")
			{:else}
				Status(type='error' message="Your account does not have permission to view this page." title="Access denied")
		{#if error.code === 404}
			{#if collection_id}
				Status(type='error' message="There is no collection available at this ID." title="Collection not found")
			{:else if multireddit_name}
				Status(type='error' message="There is no multireddit available under this name." title="Multireddit not found")
			{:else if subreddit_name}
				Status(type='error' message="This subreddit was permanently closed by Reddit management." title="Subreddit banned")
			{:else if user_name}
				Status(type='error' message="This user may be banned or suspended, or there may not be an account with that name." title="User not found")
			{:else}
				Status(type='error' message="The requested page was not found." title="Page not found")
		{:else if error instanceof api.errors.NetworkFailure}
			Status(type='error' message="The Reddit server may be unreachable, or the requested page may not exist." title="Page unreachable")
		{:else if error.description || error.reason}
			Status(type='error' message="An error occurred. We don't have any further details." title="Error: {error.reason || error.description}")
		{:else}
			Status(type='error' message="An unknown error occurred. We don't know what to do about it." title="Unknown error")

style.
	.feed-summary
		display flex
		flex-flow column nowrap
		gap 2em