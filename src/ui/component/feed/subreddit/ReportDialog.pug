script.
	import { createEventDispatcher } from 'svelte'

	import api from '../../../../api/index.js'
	
	import FormattedHTML from '../../common/FormattedHTML.pug'
	import TextInput from '../../common/TextInput.pug'
	
	export subreddit_name = null
	export target_type = null

	collect_site_rules = (array, site_rules_tree) ->
		for current_level_rule in site_rules_tree
			if current_level_rule.nextStepReasons
				collect_site_rules(array, current_level_rule.nextStepReasons)
			else
				array.push({ violation_reason: current_level_rule.reasonText })
	dispatch = createEventDispatcher()
	freeform_input_value = null
	site_rules = null
	subreddit = null
	subreddit_rules = null

	api.loadWatch(api.ID('subreddit', subreddit_name), (x) ->
		{ data: subreddit } = x
	)
	api.loadWatch(api.ID('subreddit_rules', subreddit_name), ({ data: rules }) ->
		if rules
			subreddit_rules = switch target_type # filter non-applicable rules
				when 'comment'
					rules.rules.filter((x) -> x.kind == 'all' || x.kind == 'comment') 
				when 'post'
					rules.rules.filter((x) -> x.kind == 'all' || x.kind == 'link')
				else
					[]
			site_rules = []
			collect_site_rules(site_rules, rules.site_rules_flow) # site rules come in a complicated flow --- flatten it
	)

form.report-menu
	{#if site_rules && subreddit}
		{#if subreddit.free_form_reports}
			fieldset.report-menu-subreddit-freeform-report
				TextInput(autofocus={true} enter_action={value => value && dispatch('submit', value)} placeholder='Enter custom reason')
				span.report-menu-hint ...or click a reason below:
		{#if subreddit_rules.length}
			fieldset.report-menu-subreddit-rules
				{#each subreddit_rules as rule}
					label.report-menu-rule.report-menu-subreddit-rule(title={rule.description})
						span Subreddit rule \#{rule.priority + 1}
						h1.report-menu-subreddit-rule-violation-name {rule.violation_reason}
						p.report-menu-subreddit-rule-violation-description
							FormattedHTML(html={rule.description_html || ''})
						input.report-menu-rule-button(on:change={e => dispatch('submit', e.target.value)} type='radio' value={rule.violation_reason})
						.report-menu-rule-gradient-fade
			hr
		fieldset.report-menu-site-rules
			{#each site_rules as rule}
				label.report-menu-rule.report-menu-site-rule(title={rule.violation_reason})
					span Site rule
					h1.report-menu-site-rule-violation-name {rule.violation_reason}
					input.report-menu-rule-button(on:change={e => dispatch('submit', e.target.value)} type='radio' value={rule.violation_reason})
					.report-menu-rule-gradient-fade

style.
	.report-menu
		display flex
		flex-flow column nowrap
		gap 1em
	.report-menu-rule
		aspect-ratio 1
		border 1px solid
		cursor pointer
		display inline-flex
		flex-flow column nowrap
		gap 3px
		overflow hidden
		padding 12px
		position relative
		&:hover
			background salmon
			color white
	.report-menu-rule-button
		display none
	.report-menu-rule-gradient-fade
		background linear-gradient(to top, var(--c-theme) 0px, transparent)
		bottom 0
		height 37%
		left 0
		pointer-events none
		position absolute
		width 100%
	.report-menu-site-rule
		border-radius 6px
	.report-menu-site-rule-violation-name
		font-size 13px
	.report-menu-site-rules
		display grid
		font-size 0.75em
		grid-auto-flow row
		grid-template-columns 1fr 1fr 1fr 1fr 1fr
		gap 6px
	.report-menu-subreddit-freeform-report
		align-items center
		display flex
		gap 9px
	.report-menu-subreddit-rule
		border-radius 9px
	.report-menu-subreddit-rule-violation-name
		font-size 1rem
	.report-menu-subreddit-rule-violation-description
		color var(--c-text-weak)
		font-size 12px
	.report-menu-subreddit-rules
		display grid
		font-size 0.75em
		grid-auto-flow row
		grid-template-columns 1fr 1fr 1fr
		gap 9px