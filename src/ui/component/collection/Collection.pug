script.
	import { getContext } from 'svelte'

	import api from '../../../api/index.js'
	import { format_url } from '../../routing/url.coffee'

	import ButtonFrame from '../shared/ButtonFrame.pug'
	import ButtonGroup from '../shared/ButtonGroup.pug'
	import CollectionAvatar from './CollectionAvatar.pug'
	import CollectionInfo from './CollectionInfo.pug'
	import Error from '../shared/Error.pug'
	import Feed from '../feed/Feed.pug'
	
	export id = null
	export subreddit_name = null
	export tab = null
	
	collection = null
	error = null
	set_theme_colors = getContext('set_theme_colors')
	tabs =
		_order: ->
			['posts', 'about']
		about:
			label: 'About'
		posts:
			label: 'Posts'
	tabs_array = (tabs) ->
		tabs._order().map((x) -> { ...tabs[x], value: x })
	
	api.loadWatch(api.ID('collection', id), (x) ->
		{ data: collection, error } = x
		set_theme_colors(collection?.primary_color, collection?.key_color)
	)

svelte:head
	title {subreddit_name ? subreddit_name.toLowerCase() + ' collection â†’ ' : ''}{collection ? collection.title : id}
{#if error}
	{#if error.code === 404}
		Error(message="There is no collection available at this ID." title="Collection not found")
	{:else if error.reason}
		Error(message="An error occurred. This is the best description we have of the error." title="Error: {error.reason}")
	{:else}
		Error(message="An unknown error occurred." title="Unknown error")
{:else if collection}
	article.collection
		section.collection-header
			CollectionAvatar(id={id} size='large')
			nav.collection-header-options
				ButtonFrame
					ButtonGroup(options={tabs_array(tabs).map(x => ({ ...x, link: format_url({ collection_id: id, subpage: x.value }) }))} selected={tab})
		{#if tab === 'about'}
			section.collection-content
				CollectionInfo(id={id})
		{:else if tab === 'posts'}
			section.collection-content.collection-posts
				Feed(collection_id={id} type='collection_posts')

style.
	.collection
		padding-right 96px
		width 672px
	.collection-content
		margin-top 2em
		padding-left 96px
	.collection-header
		align-items flex-end
		display grid
		gap 32px
		grid-template-columns 64px 1fr
		justify-items flex-start
	.collection-header-options
		align-items center
		display flex
		gap 10px