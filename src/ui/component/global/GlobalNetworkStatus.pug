script.
	import { onMount, onDestroy } from 'svelte'

	import api from '../../../api/index.js'
	import { Time, TimeSource } from '../../../lib/index.js'

	offline = false
	ratelimit_remaining_ratio = 1
	ratelimit_seconds_until_reset = 600
	timer_id = null

	update_status = ->
		offline = navigator.onLine == false
		{ estimatedMaxRequests, remainingRequests, resetTimestampMs } = api.getRatelimitStatus()
		ratelimit_remaining_ratio = remainingRequests / estimatedMaxRequests
		ratelimit_seconds_until_reset = Math.trunc(Time.msToS(resetTimestampMs - Time.unixMs()))

	onMount ->
		timer_id = TimeSource.onTick(-> update_status())

	onDestroy ->
		TimeSource.deregister(timer_id)

	update_status()

slot
{#if offline}
	#network-status.network-status-error OFFLINE
{:else if ratelimit_remaining_ratio === 0}
	#network-status.network-status-error RATELIMIT EXHAUSTED ({ratelimit_seconds_until_reset}S)
{:else if ratelimit_remaining_ratio < 0.125}
	#network-status.network-status-warning RATELIMIT VERY LOW
{:else if ratelimit_remaining_ratio < 0.25}
	#network-status.network-status-warning RATELIMIT LOW

style.
	#network-status
		font-size 2em
		font-weight var(--f-wght-strong)
		left 0
		padding 10px
		position fixed
		text-align center
		top 0
		width 100%
		&.network-status-error
			color salmon
		&.network-status-warning
			color darkkhaki