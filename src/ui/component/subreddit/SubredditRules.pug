script.
	import api from '../../../api/index.js'
	
	import Error from '../shared/Error.pug'
	import FormattedHTML from '../shared/FormattedHTML.pug'

	export name = null
	
	error = null
	loading = null
	rules = null
	
	api.loadWatch(api.ID('subreddit_rules', name), (x) ->
		{ data: combined_rules, error, loading } = x
		rules = combined_rules?.rules # get only subreddit rules, not global rules
		if rules
			rules.sort((a, b) -> a.priority - b.priority) # ensure rules are in order
	)

{#if error}
	Error(message='Error loading rules.')
{:else if rules}
	.md
		ol.subreddit-rules
			{#each rules as rule}
				li.subreddit-rule
					h1.subreddit-rule-short-description {rule.short_name}
					{#if rule.description_html}
						FormattedHTML(html={rule.description_html})
			{:else}
				h1 No rules on record.
{:else if loading}
	p Loading...

style.
	.subreddit-rule
		margin 1.333em 0 0
	.subreddit-rule-short-description
		font-size inherit
		font-feature-settings 'calt', 'cpsp', 'ss01'
		line-height 1.25
		margin-bottom 0.5em
		text-transform uppercase