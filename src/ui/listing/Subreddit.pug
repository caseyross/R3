script.
	import { Time } from '../../utils/index.js'
	import api from '../../api/index.js'
	import Button from '../controls/Button.pug'
	import PageUnavailable from '../errors/PageUnavailable.pug'
	import Post from '../post/Post.pug'
	import PostList from './PostList.pug'
	export name = null
	export sort = null
	error = null
	post_short_ids = null
	selection = null
	api.watch(api.ID.dataset('subreddit_posts', name, sort, 10), (x) -> { data: post_short_ids, error: error } = x)
	localStorage["meta.last_visit.#{name}"] = Time.epochMs()

svelte:head
	title subreddit: {name}
{#if error}
	{#if error instanceof api.errors.ServerError}
		PageUnavailable(path='/r/{name}')
{:else if post_short_ids}
	nav.subreddit-nav
		section.subreddit-info
			h1 {name}
		hr
		section.subreddit-posts
			PostList(short_ids={post_short_ids} select={short_id => selection = { type: 'post', short_id }} selection={selection?.short_id})
		hr(style='margin: 0 0 1em 0')
		section.subreddit-posts-paging
			p Page 1
	{#if selection}
		{#if selection.type === 'post'}
			{#key selection.short_id}
				Post(short_id={selection.short_id})

style.
	.subreddit-nav
		background white
		border 1px solid
		border-radius 5px
		display flex
		flex-flow column nowrap
		height 90%
		padding 10px
		position relative
		top 5%
		width 360px
	.subreddit-posts
		flex 1
		overflow-y auto
		&::-webkit-scrollbar
			display none