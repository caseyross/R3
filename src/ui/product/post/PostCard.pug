script.
	import Flair from './Flair.pug'
	import api from '../../../api/index.js'
	import Format from '../../../lib/Format.coffee'
	import formatRoute from '../../infra/formatRoute.coffee'
	import { createEventDispatcher } from 'svelte'
	dispatch = createEventDispatcher()
	export id = null
	post = null
	api.watch(id, (x) ->
		{ data: post } = x
		if post?.user_tranches then for tranch in post.user_tranches then api.load(tranch)
	)
	onClick = (event) ->
		if event.button is 0 then event.stopPropagation()
	onMousedown = (event) ->
		if event.button is 0
			event.stopPropagation()
			dispatch('select', id)

{#if post}
	a.post-link(href={formatRoute(id)})
		button.post-card(on:click={onClick} on:mousedown={onMousedown})
			.post-meta
				.post-flair
					{#if post.link_flair_text}
						Flair(color={post.link_flair_background_color} richtext={post.link_flair_richtext} text={post.link_flair_text})
			h1.post-title {post.title}
			.post-info
				time(datetime={post.created_utc} title={post.edited ? Format.time.sAbsolute(post.created_utc) + ' (last edited ' + Format.time.sAbsolute(post.edited) + ')': Format.time.sAbsolute(post.created_utc)}) {Format.time.sRelative(post.created_utc)}{post.edited ? ' *' : ''}
				data.post-comment-count {post.num_comments} ðŸ’¬
			.post-subreddit in
				a(href='/r/{post.subreddit}') {post.subreddit}

style.
	.post-card
		background var(--commentcolor)
		border-radius 1em
		text-align left
		padding 1em
		position relative
		width 100%
	.post-info
		align-items center
		display flex
		font bold 12px 'roboto mono'
		gap 1ch
		justify-content space-between
		opacity 0.75
	.post-link
		display block
	.post-meta
		display flex
		justify-content space-between
		position absolute
		top -1em
		width calc(100% - 2em)
	.post-title
		color var(--linkcolor)
		font-size 1.33em
		margin 0
		overflow-wrap anywhere
	.post-subreddit
		margin-top 0.5em
		position absolute
		right 1em