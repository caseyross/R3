script.
	import Format from '../../../lib/Format.coffee'
	import Flair from './Flair.pug'
	import api from '../../../api/index.js'
	export shortId = null
	post = null
	api.watch(api.format.datasetId('post', shortId), (x) ->
		{ data: post } = x
		if post?.user_tranches then for tranch in post.user_tranches then api.load(tranch)
	)

{#if post}
	.post-headline
		.post-meta
			.post-flair
				{#if post.link_flair_text}
					Flair(color={post.link_flair_background_color} richtext={post.link_flair_richtext} text={post.link_flair_text})
		h1.post-title {post.title}
		.post-info
			time(datetime={post.created_utc} title={post.edited ? Format.time.sAbsolute(post.created_utc) + ' (last edited ' + Format.time.sAbsolute(post.edited) + ')': Format.time.sAbsolute(post.created_utc)}) {Format.time.sRelative(post.created_utc)}{post.edited ? ' *' : ''}
			data.post-comment-count {post.num_comments} ðŸ’¬
		.post-subreddit in
			a(href='/r/{post.subreddit}') {post.subreddit}

style.
	.post-headline
		background var(--commentcolor)
		border-radius 1em
		padding 1em
		position relative
	.post-meta
		display flex
		justify-content space-between
		position absolute
		top -1em
		width calc(100% - 2em)
	.post-info
		align-items center
		display flex
		font-size 12px
		gap 1ch
		justify-content space-between
		margin-top 1em
		opacity 0.75
	.post-title
		align-items flex-end
		color var(--linkcolor)
		display flex
		font-size 18px
		font-weight normal
		margin 0
		overflow-wrap anywhere
	.post-subreddit
		float right
		margin-top 0.5em