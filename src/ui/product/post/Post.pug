script.
	import { Format } from '../../../utils/index.js'
	import Avatar from '../user/Avatar.pug'
	import AVPlayer from './AVPlayer.pug'
	import Button from '../controls/Button.pug'
	import Comment from './Comment.pug'
	import Flair from './Flair.pug'
	import Score from './Score.pug'
	import SelftextMarkup from './SelftextMarkup.pug'
	import api from '../../../api/index.js'
	export id = null
	export multireddit = false
	export standalone = false
	post = null
	api.watch(id, (x) ->
		{ data: post } = x
		if post?.user_tranches then for tranch in post.user_tranches then api.load(tranch)
	)
	expanded = standalone

svelte:head
	{#if standalone}
		{#if post}
			title post: {post.title}
		{:else}
			title post: {api.ID.body(id)[0]}
{#if post}
	article.post
		header.post-header
			button.post-card(on:mousedown={() => expanded = !expanded})
				.post-headline-layout
					.post-headline-layout-indent
						Score(uploadVote={(vote) => api.send(api.ID.action('vote_post', api.ID.body(id)[0], vote))} value={!post.hide_score && post.score} vote={post.likes == null ? 0 : post.likes ? 1 : -1})
					.post-headline-layout-core
						.post-meta
							.post-flair
								{#if post.link_flair_text}
									Flair(color={post.link_flair_background_color} richtext={post.link_flair_richtext} text={post.link_flair_text})
						h1.post-title {post.title}
						.post-info(style='display: none')
							time(datetime={post.created_utc} title={post.edited ? Format.time.sAbsolute(post.created_utc) + ' (last edited ' + Format.time.sAbsolute(post.edited) + ')': Format.time.sAbsolute(post.created_utc)}) {Format.time.sRelative(post.created_utc)}{post.edited ? ' *' : ''}
							data.post-comment-count {post.num_comments} ðŸ’¬
						{#if multireddit || standalone}
							.post-subreddit in
								a(href='/r/{post.subreddit}') {post.subreddit}
		{#if expanded || standalone}
			section.post-content
				{#if post.format === 'self'}
					{#if !post.selftext.length}
						.post-selftext-empty
				{:else if post.format === 'prediction'}
					.post-predictions
						{#each post.tournament_data.predictions as prediction}
							h2.post-prediction-title {prediction.title}
							dl.post-prediction-options
								{#each prediction.options as option}
									li
										dt
											meter(max={prediction.total_stake_amount} min={0} value={option.total_amount})
										dd {option.text}
				{:else if post.format === 'media'}
					{#if post.media.length > 1}
						.post-gallery
							{#each post.media as media, index}
								figure(style='max-width: {media.aspect_ratio * 360}px')
									a(href={media.image_url} rel='external noopener preconnect' target='_blank')
										picture
											source(srcset={media.image_url_640})
											img.post-gallery-image(alt='image {index + 1} of {post.media.length} in gallery' src={media.image_url} style="aspect-ratio: {media.aspect_ratio}")
									{#if media.caption_text || media.caption_url}
										figcaption.post-gallery-image-caption
											{#if media.caption_text}
												p {media.caption_text}
											{#if media.caption_url}
												a(href={media.caption_url}) {media.caption_url}
					{:else}
						{@const media = post.media[0]}
							{#if media.video_url}
								AVPlayer(audio_url={media.video_audio_url} dimensions={[640, 360]} mimic_gif={media.is_gif} video_url={media.video_url})
							{:else if media.image_url}
								a(href={media.image_url} rel='external noopener preconnect' target='_blank')
									picture
										source(srcset={media.aspect_ratio < 1.5 ? media.image_url_640 : media.image_url_960})
										img.post-image(alt='' src={media.image_url} style="aspect-ratio: {media.aspect_ratio}; width: {Math.min(media.source_width, media.aspect_ratio < 1.5 ? 640 : 960)}px")
				{:else if post.format === 'embed'}
					{#each post.media as media}
						{#if media.iframe_url}
							<!-- svelte wants iframe "title" attribute, which interferes with fullscreen playback (tooltip obscuring screen) and anyway provides no additional info here beyond what's in the URL -->
							<!-- svelte-ignore a11y-missing-attribute -->
							iframe.post-iframe(allow={media.iframe_allow} allowfullscreen='true' src={media.iframe_url})
							menu.post-iframe-actions
								Button(action={() => window.open(post.url)} key='o' text='Open original')
						{:else if media.html}
							{@html media.html}
				{:else if post.format === 'link'}
					a(href={post.url} rel='external noopener preconnect') {post.url}
					menu.post-link-actions
						Button(action={() => window.open(post.url)} key='e' text='Open link')
				{:else}
					p [Error displaying post.]
				{#if post.selftext_html}
					.post-selftext
						SelftextMarkup(html={post.selftext_html})
			{#if post.replies?.length}
				ol.post-replies
					{#each post.replies as replyId}
						Comment(id={replyId})
					{#if post.more_replies}
						.post-more-replies
							Button(appearance='text' text="+ {post.more_replies.length} more {post.more_replies.length === 1 ? 'reply' : 'replies'}...")

style.
	.post-card
		background var(--commentcolor)
		border-radius 1em
		text-align left
		padding 1em
		position relative
		width 480px
	.post-content
		margin-top 2em
		position relative
	.post-gallery
		display flex
		flex-flow row wrap
		gap 40px
	.post-gallery-image
		max-height 360px
		max-width 100%
		&:hover
			outline solid
	.post-gallery-image-caption
		font-size 0.75em
		padding-top 0.5em
		text-align center
	.post-headline-layout
		display flex
		gap 1ch
	.post-headline-layout-indent
		flex 0 0 29px
	.post-info
		align-items center
		color #808080
		display flex
		font 12px var(--typeface-mono)
		gap 1ch
		margin-top 1em
	.post-iframe
		aspect-ratio 16 / 9
		max-width 100%
		width 640px
	.post-iframe-actions
		display flex
		gap 1em
		margin-top 1em
	.post-image
		max-width 100%
		&:hover
			outline solid
	.post-info
		align-items center
		display flex
		font bold 12px var(--typeface-mono)
		gap 1ch
		justify-content space-between
		opacity 0.75
	.post-link-actions
		display flex
		gap 1em
		margin-top 1em
	.post-meta
		display flex
		justify-content space-between
		position absolute
		top -1em
		width calc(100% - 2em)
	.post-more-replies
	:global(.post-replies > .comment)
		margin-top 50px !important
	.post-prediction-options > li
		display flex
	.post-selftext
		margin-top 40px
	:global(.post-selftext-media)
		max-width 100%
		padding 1em 0
	.post-subreddit
		margin-top 0.5em
		position absolute
		right 1em
	.post-title
		color var(--linkcolor)
		font-size 1em
		margin 0
		overflow-wrap anywhere