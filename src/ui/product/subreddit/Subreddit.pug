script.
	import Button from '../controls/Button.pug'
	import ListingLayout from '../listing/ListingLayout.pug'
	import PageUnavailable from '../../infra/PageUnavailable.pug'
	import Post from '../post/Post.pug'
	import PostCard from '../post/PostCard.pug'
	import PostList from '../listing/PostList.pug'
	import { hotkey } from '../controls/useActions/index.js'
	import api from '../../../api/index.js'
	export name = null
	export sort = null
	error = null
	postIds = null
	postIndex = -1
	api.watch(api.format.datasetId('subreddit_posts', name, sort, 10), (x) -> { data: postIds, error: error } = x)

svelte:head
	title subreddit: {name}
{#if error}
	{#if error instanceof api.errors.ConnectionFailedError || error instanceof api.errors.InvalidRequestError}
		PageUnavailable(path='/r/{name}')
{:else if postIds}
	{#key postIndex}
		ListingLayout
			.subreddit-navigation(slot='navigation')
				{#if postIndex < 0}
					div(style='display: none')
						Button(link='/r/{name}/search' text='Search')
						Button(link='/r/{name}/wiki' text='Wiki')
						hr
						Button(link='/r/{name}/new' text='New')
						Button(link='/r/{name}/rising' text='Rising')
						Button(link='/r/{name}/hot' text='Hot')
						Button(link='/r/{name}/top' text='Top')
						Button(link='/r/{name}/controversial' text='Contro.')
					PostList(ids={postIds} on:select={(event) => postIndex = event.detail.index})
			.subreddit-selection(slot='selection')
				{#if postIndex > -1}
					Post(id={postIds[postIndex]} setPageTitle={false})
			.subreddit-next(slot='next')
				{#if postIndex > -1 && postIndex < postIds.length - 1}
					PostCard(id={postIds[postIndex + 1]} on:select={(event) => postIndex = postIndex + 1})