script.
	import Markup from '../text/Markup.pug'
	import PageUnavailable from '../../infra/PageUnavailable.pug'
	import { Format } from '../../../utils/index.js'
	import api from '../../../api/index.js'
	export page_name = null
	export revision_id = null
	export subreddit_name = null
	error = null
	page = null
	api.watch(api.ID.dataset('wiki', subreddit_name, page_name, revision_id), (x) -> { data: page, error: error } = x)

svelte:head
	title wiki: {subreddit_name}: {page_name.split('/').join(': ')}
{#if error}
	{#if error instanceof api.errors.ServerError}
		PageUnavailable(path='/r/{subreddit_name}/wiki/{page_name}?v={revision_id}')
{#if page}
	.wiki-page
		h1.wiki-page-name {subreddit_name} / {page_name.split('/').join(' / ')}
		.wiki-page-info
			.wiki-page-edit-date Revised {Format.time.sRelative(page.revision_date)}
		.wiki-page-body
			Markup(html={page.content_html})

style.
	.wiki-page
		margin-left 320px
		padding 6em
	.wiki-page-body
		margin-top 3em
		position relative
	.wiki-page-info
		align-items center
		display flex
		font-size 12px
		gap 1ch
		margin-top 1em
		opacity 0.5
	.wiki-page-name
		font-size 2em
	:global(.wiki-page img)
		max-width 100%
	:global(.wiki-page .toc)
		font-size 12px
		line-height 1
		max-height 100vh
		overflow auto
		padding 8em 0
		position fixed
		right 70vw
		top 0
		&::-webkit-scrollbar
			display none
	:global(.wiki-page .toc > ul)
		background var(--color-paper-callout)
		padding 3em 2em !important
	:global(.wiki-page .toc li)
		margin-top 1em
	:global(.wiki-page .toc ol)
	:global(.wiki-page .toc ul)
		list-style-type none
		padding 0
	:global(.wiki-page .toc ol ol)
	:global(.wiki-page .toc ol ul)
	:global(.wiki-page .toc ul ol)
	:global(.wiki-page .toc ul ul)
		border-left 1px solid rgba(0,0,0,0.1)
		padding-left 1em