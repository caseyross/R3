script.
	export account = {}
	export feed = {}
	import Avatar from '/src/components/Avatar'
	import Comment from '/src/components/Comment'
	import Message from '/src/components/Message'
	import Post from '/src/components/Post'
	import FETCH from '/src/effects/FETCH'
	import RedditComment from '/src/objects/RedditComment'
	import RedditMessage from '/src/objects/RedditMessage'
	import RedditPost from '/src/objects/RedditPost'
	import V_Comments from '/src/views/V_Comments'
	import V_Essay from '/src/views/V_Essay'
	import V_Gallery from '/src/views/V_Gallery'
	selectedStory = null

main
	.h-full.overflow-auto.hide-scrollbar.flex.flex-col.items-end
		{#if selectedStory}
			{#if selectedStory instanceof RedditPost}
				FETCH(let:v p={selectedStory.data})
					{#if v.content.type === 'comment'}
						FETCH(let:v p={v.content.post.data})
							FETCH(let:v p={v.comments})
								V_Comments(comments={v})
					{:else if v.content.type === 'text'}
						{#if v.content.text.length}
							V_Essay(text={v.content.text})
					{:else if v.content.type === 'image'}
						V_Gallery(images={v.content.images})
					{:else}
						article {v.content.type}
			{:else if selectedStory instanceof RedditComment}
				p COMMENT
			{:else if selectedStory instanceof RedditMessage}
				p MESSAGE
	.h-full.flex.flex-col
		.relative.h-96
			FETCH(let:v p={feed.about()})
				.absolute.h-full.w-full(style='background-image: url({v.banner_background_image || v.banner_img}); background-size: cover')
			.border.border-black.p-8
				div now viewing
				h1.inline-flex.items-center
					span.inline-block.px-4.py-2.border.border-black.text-5xl {feed.domain}
					span.text-6xl {feed.subdomain}
				FETCH(let:v p={feed.about})
					{#if feed.domain === 'u'}
						div {(v.link_karma + v.comment_karma) || 12912} karma
					{:else}
						div {v.accounts_active || 4932} online, {v.subscribers || 1583902} subscribers
		ol.flex-grow.overflow-auto.hide-scrollbar.list-none
			{#each feed.fragments as fragment}
				FETCH(let:v p={fragment()})
					{#each v as story}
						li.m-16(on:mousedown={() => selectedStory = story})
							{#if story instanceof RedditPost}
								FETCH(let:v p={story.data})
									Post(post={v} showNativeFeed={feed.id !== v.nativeFeed.id} showTitleFlair={true})
							{:else if story instanceof RedditComment}
								Comment(comment={story})
							{:else if story instanceof RedditMessage}
								Message(message={story})
							{:else}
								.error-tag UNKNOWN ITEM
								.error-message {story.toString()}
		nav.h-96
			ol.flex.flex-wrap
				{#each account.subscriptions.users as user}
					li
						Avatar(feed={user})
				{#each account.subscriptions.subreddits as subreddit}
					li
						Avatar(feed={subreddit})
		nav.h-48.border.border-black.p-8
			#quick-settings
				label Show NSFW
					input(type='checkbox' checked)
			span logged in as
			Avatar(feed={account.me})
	.h-full.overflow-auto.hide-scrollbar.flex.flex-col.items-start
		{#if selectedStory}
			{#if selectedStory instanceof RedditPost}
				FETCH(let:v p={selectedStory.data})
					FETCH(let:v p={v.comments})
						V_Comments(comments={v})

style.
	main
		height 100vh
		display grid
		grid-template-columns 40% 20% 40%
		grid-template-rows 100%