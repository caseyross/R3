script.
	export account = {}
	export feed = {}
	import Avatar from '/src/components/Avatar'
	import Comment from '/src/components/Comment'
	import Message from '/src/components/Message'
	import Post from '/src/components/Post'
	import FETCH from '/src/effects/FETCH'
	import RedditComment from '/src/objects/RedditComment'
	import RedditMessage from '/src/objects/RedditMessage'
	import RedditPost from '/src/objects/RedditPost'
	import V_Comments from '/src/views/V_Comments'
	import V_Essay from '/src/views/V_Essay'
	import V_Gallery from '/src/views/V_Gallery'
	selectedStory = null

main
	.h-full.overflow-auto.hide-scrollbar.flex.flex-col.items-end
		{#if selectedStory}
			{#if selectedStory instanceof RedditPost}
				FETCH(let:v p={selectedStory.data})
					{#if v.content.type === 'comment'}
						FETCH(let:v p={v.content.post.data})
							FETCH(let:v p={v.comments})
								V_Comments(comments={v})
					{:else if v.content.type === 'text'}
						{#if v.content.text.length}
							V_Essay(text={v.content.text})
					{:else if v.content.type === 'image'}
						V_Gallery(images={v.content.images})
					{:else}
						article {v.content.type}
			{:else if selectedStory instanceof RedditComment}
				p COMMENT
			{:else if selectedStory instanceof RedditMessage}
				p MESSAGE
	.h-full.flex.flex-col
		.h-64.border-b.border-dashed.border-black.p-8
			div now viewing
			h1.inline-flex.items-center
				span.inline-block.px-4.py-2.border.border-black.text-beta {feed.domain}
				span.text-alpha {feed.subdomain}
			FETCH(let:v p={feed.about})
				{#if feed.domain === 'u'}
					div {(v.link_karma + v.comment_karma) || 12912} karma
				{:else}
					div {v.accounts_active || 4932} online, {v.subscribers || 1583902} subscribers
		ol.stories.p-8.list-none
			{#each feed.fragments as fragment}
				FETCH(let:v p={fragment()})
					{#each v as story, storyIndex}
						li.m-4.flex(on:mousedown={() => selectedStory = story} class={selectedStory === story ? 'selected-story' : ''})
							.w-16.h-16.bg-black.text-white.text-right {storyIndex + 1}
							{#if story instanceof RedditPost}
								FETCH(let:v p={story.data})
									Post(post={v} showNativeFeed={feed.id !== v.nativeFeed.id} showTitleFlair={true})
							{:else if story instanceof RedditComment}
								Comment(comment={story})
							{:else if story instanceof RedditMessage}
								Message(message={story})
							{:else}
								.error-tag UNKNOWN ITEM
								.error-message {story.toString()}
	.h-full.overflow-auto.hide-scrollbar.flex.flex-col.items-start.py-16
		{#if selectedStory}
			{#if selectedStory instanceof RedditPost}
				FETCH(let:v p={selectedStory.data})
					FETCH(let:v p={v.comments})
						V_Comments(comments={v})

style.
	main
		height 100vh
		display grid
		grid-template-columns 42% 16% 42%
		grid-template-rows 100%
	.selected-story
		background cornsilk
	.stories
		background: #eee
		border: 1px solid gray