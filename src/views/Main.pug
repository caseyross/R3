script.
	import { Comment, Message, Post } from '/src/models'
	import { PROMISE } from './effects'
	import Avatar from './Avatar'
	import Button from './Button'
	import CommentSection from './CommentSection'
	import Gallery from './Gallery'
	import Inspector from './Inspector'
	import Link from './Link'
	import MouseMenu from './MouseMenu'
	export account = {}
	export feed = {}
	selected_story = null
	inspect = false
	KeyMap.Backquote =
		n: 'Toggle Inspect Mode'
		d: () => inspect = !inspect

svelte:head
	{#if selected_story}
		title {feed.name} - {selected_story.title}
	{:else}
		title {feed.name}
main
	#grid-a.overflow-auto.hide-scrollbar.border-r.border-black.pl-8.py-8.bg-gray-50
		h1.text-alpha {feed.subdomain}
		ol.p-0.list-none.border-t-2.border-dashed.border-black
			{#each feed.data.pages as page}
				PROMISE(let:v p={page})
					{#each v as story}
						li.p-8(on:mousedown={() => selected_story = story})
							.break-words.cursor-default
								{#if story instanceof Post}
									.flex
										Avatar(feed={story.meta.native_feed})
										data.text-gray-400(value={story.meta.submit_date.valueOf()}) {story.meta.submit_date.toRelativeString()}
									{#if story.content.type === 'link'}
										Link(href={story.content.url.href}) {story.title}
									{:else if story.content.type === 'feed'}
										Link(href={story.content.data.href}) {story.title}
									{:else}
										span {story.title}
								{:else if story instanceof Comment}
									Comment(comment={story})
								{:else if story instanceof Message}
									span MESSAGE
								{:else}
									.error-tag UNKNOWN ITEM
									.error-message {String(story)}
		button.w-48.h-48.text-gray-400.border.border-gray-400 next page
	{#if selected_story}
		#grid-s.h-full.overflow-auto.hide-scrollbar.px-20.py-32
			.text-beta.mb-4 {selected_story.title}
			.flex.mb-20.text-gray-400
				span posted {selected_story.meta.submit_date.toRelativeString()} ago by u/{selected_story.author.name}
			{#if selected_story instanceof Post}
				.mb-20
					{#if selected_story.content.type === 'iframe'}
						{@html selected_story.content.data}
					{:else if selected_story.content.type === 'comment'}
						CommentSection(comments={selected_story.content.data})
					{:else if selected_story.content.type === 'image'}
						Gallery(images={selected_story.content.data})
					{:else}
						article.text-gamma {selected_story.content.data}
				hr
				CommentSection(comments={selected_story.comments})
			{:else if selected_story instanceof Comment}
				p COMMENT
			{:else if selected_story instanceof Message}
				p MESSAGE
	{#if selected_story}
		#grid-d.h-full.overflow-auto.py-20
			#minimap
	MouseMenu
	{#if inspect}
		.fixed.w-screen.h-screen.overflow-auto.py-4.bg-white.text-black
			Inspector(key='selected_story' value={selected_story})
			Inspector(key='feed' value={feed})
			Inspector(key='account' value={account})

style.
	main
		height 100vh
		display grid
		grid-template-rows 100%
		grid-template-columns 220px 400px 680px 620px
		grid-template-areas '. a s d'
	#grid-a
		grid-area a
	#grid-s
		grid-area s
	#grid-d
		grid-area d
	#minimap
		width 96px
		height 96px