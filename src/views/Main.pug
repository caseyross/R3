script.
	import * as Models from '/src/models'
	import { PROMISE } from './effects'
	import Avatar from './Avatar'
	import Button from './Button'
	import Comment from './Comment'
	import CommentSection from './CommentSection'
	import Gallery from './Gallery'
	import Inspector from './Inspector'
	import Link from './Link'
	import MouseMenu from './MouseMenu'
	export account = {}
	export feed = {}
	selected_story = null
	inspect = false
	KeyMap.Backquote =
		n: 'Toggle Inspect Mode'
		d: () => inspect = !inspect

svelte:head
	{#if selected_story}
		title {feed.name} - {selected_story.title}
	{:else}
		title {feed.name}
main
	#grid-s.overflow-auto.hide-scrollbar
		.h-96.flex.items-center
			h1.text-alpha {feed.subdomain}
		ol.p-0.list-none
			{#each feed.data.pages as page}
				PROMISE(let:v p={page})
					{#each v as story}
						li(on:mousedown={() => selected_story = story})
							{#if story instanceof Models.Post}
								{#if story.content.type === 'image'}
									img(src={story.content.data[0].best_fit(320, 320).href})
								.break-words.cursor-default.mt-8.p-8.border.border-black
									h3 {story.title}
									.flex.text-gray-400
										{story.meta.native_feed.name}
							{:else if story instanceof Models.Comment}
								Comment(comment={story})
							{:else if story instanceof Models.Message}
								span MESSAGE
							{:else}
								.error-tag UNKNOWN ITEM
								.error-message {String(story)}
	{#if selected_story}
		#grid-d.h-full.overflow-auto.hide-scrollbar.px-20.py-16
			.text-beta.mb-4 {selected_story.title}
			.flex.justify-between.mb-8.text-gray-400
				span u/{selected_story.author.name}
			{#if selected_story instanceof Models.Post}
				.mb-12.break-words
					{#if selected_story.content.type === 'iframe'}
						{@html selected_story.content.data}
					{:else if selected_story.content.type === 'comment'}
						CommentSection(comments={selected_story.content.data})
					{:else if selected_story.content.type === 'image'}
						Gallery(images={selected_story.content.data})
					{:else if selected_story.content.type === 'text'}
						article.text-delta {selected_story.content.data}
					{:else}
						Link(href={selected_story.content.url.href}) {selected_story.content.url.href}
				hr.mb-4
				CommentSection(comments={selected_story.comments})
			{:else if selected_story instanceof Models.Comment}
				p COMMENT
			{:else if selected_story instanceof Models.Message}
				p MESSAGE
	MouseMenu
	{#if inspect}
		.fixed.w-screen.h-screen.overflow-auto.py-4.bg-white.text-black
			Inspector(key='selected_story' value={selected_story})
			Inspector(key='feed' value={feed})
			Inspector(key='account' value={account})

style.
	main
		height 100vh
		display grid
		grid-template-rows 100%
		grid-template-columns 320px 320px 960px
		grid-template-areas 'a s d'
	#grid-a
		grid-area a
	#grid-s
		grid-area s
	#grid-d
		grid-area d
		padding-right 120px
	#minimap
		width 96px
		height 96px