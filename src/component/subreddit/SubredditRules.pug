script.
	import api from 'rr-api'
	
	import Status from '../generic/Status.pug'
	import FormattedHTML from '../generic/FormattedHTML.pug'

	export name = null
	
	error = null
	loading = null
	rules = null
	
	api.loadWatch(api.ID('subreddit_rules', name), (x) ->
		{ data: combined_rules, error, loading } = x
		rules = combined_rules?.rules # get only subreddit rules, not global rules
		if rules
			rules.sort((a, b) -> a.priority - b.priority) # ensure rules are in order
	)

{#if error}
	Status(type='error' message='Error loading rules.')
{:else if rules}
	article.md.subreddit-rules
		ol
			{#each rules as rule}
				li.subreddit-rule
					h1.subreddit-rule-name {rule.short_name}
					{#if rule.description_html}
						.subreddit-rule-description
							FormattedHTML(html={rule.description_html})
			{:else}
				.subreddit-rules-empty No rules on record.
{:else if loading}
	span.subreddit-rules-loading Loading...

style.
	.subreddit-rule
		margin-top 1.333em
	.subreddit-rule-description
		margin-top 0.333em
	.subreddit-rule-name
		font-size inherit
		letter-spacing 0
		line-height inherit
	.subreddit-rules-empty
		color var(--c-text-weak)
	.subreddit-rules-loading
		color var(--c-text-weak)