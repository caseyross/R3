script.
	import api from 'rr-api'
	import { getContext } from 'svelte'

	import { format_url } from '../../url/index.js'

	import Button from '../generic/Button.pug'

	export filter = null
	export multireddit_name = null
	export sort = null
	export subreddit_name = null
	export time_range = null
	export type = null
	export user_name = null
	export wikipage_name = null

	internal_navigate = getContext('internal_navigate')
	sort_options = [
		{ label: 'New', value: 'new' }
		{ label: 'Rising', value: 'rising' }
		{ label: 'Hot', value: 'hot' }
		{ label: 'Top (7d)', value: 'top_week' }
		{ label: 'Top (30d)', value: 'top_month' }
		{ label: 'Top (1y)', value: 'top_year' }
		{ label: 'Top (All)', value: 'top_all' }
		{ label: 'Con. (7d)', value: 'controversial_week' }
		{ label: 'Con. (30d)', value: 'controversial_month' }
		{ label: 'Con. (1y)', value: 'controversial_year' }
		{ label: 'Con. (All)', value: 'controversial_all' }
		{ label: 'Search', value: 'search' }
	]
	sort_options_frontpage = [
		{ label: 'New', value: 'new' }
		{ label: 'Rising', value: 'rising' }
		{ label: 'Hot', value: 'hot' }
		{ label: 'Best', value: 'best' }
		{ label: 'Top (7d)', value: 'top_week' }
		{ label: 'Top (30d)', value: 'top_month' }
		{ label: 'Top (1y)', value: 'top_year' }
		{ label: 'Top (All)', value: 'top_all' }
		{ label: 'Con. (7d)', value: 'controversial_week' }
		{ label: 'Con. (30d)', value: 'controversial_month' }
		{ label: 'Con. (1y)', value: 'controversial_year' }
		{ label: 'Con. (All)', value: 'controversial_all' }
	]
	sort_options_user = [
		{ label: 'New', value: 'new' }
		{ label: 'Hot', value: 'hot' }
		{ label: 'Top', value: 'top_all' }
		{ label: 'Controversial', value: 'controversial_all' }
	]

	if wikipage_name
		sort_options = sort_options.concat([{ label: 'Wiki', value: 'wiki' }])
		sort = 'wiki'
	else if type == 'subreddit_posts'
		api.loadWatch(api.ID('subreddit', subreddit_name), ({ data: subreddit }) ->
			if subreddit?.wiki_enabled
				sort_options = sort_options.concat([{ label: 'Wiki', value: 'wiki' }])
		)

Button(action={value => internal_navigate({ href: location.origin + format_url(value === 'wiki' ? { subreddit_name, wikipage_name: 'index' } : { feed_filter: filter, feed_sort: value.split('_')[0], feed_time_range: value.split('_')[1], multireddit_name, subreddit_name, user_name }) })} options={(type === 'multireddit_posts' && user_name === 'r' && multireddit_name === 'subscribed') ? sort_options_frontpage : type === 'user_posts' ? sort_options_user : sort_options} selected={['controversial', 'top'].includes(sort) ? [sort, time_range].join('_') : sort})