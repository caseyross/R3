script.
	import Channel from './channel/Channel.pug'
	import ChannelDirectory from './channel/ChannelDirectory.pug'
	import LoggingIn from './api/LoggingIn.pug'
	import URLState from './url/URLState.coffee'

	export urlState = new URLState()
	ratelimitCount = ''
	showDirectory = no

	activateLink = (link) -> switch
		when not link then return
		when link.origin is location.origin then urlState = new URLState(link.href)
		when link.target is '_blank' then open(link.href)
		else location.href = link.href
	addEventListener 'click',
		(e) => if e.button is 0 then e.preventDefault()
		{ capture: true }
	addEventListener 'mousedown',
		(e) =>
			if e.button is 0 and not (e.altKey or e.ctrlKey or e.metaKey)
				activateLink(e.target.closest('a'))
		{ capture: true }
	addEventListener 'keydown',
		(e) => switch e.key
			when 'Enter'
				if e.target.tagName is 'A'
					e.preventDefault()
					activateLink(e.target)
			when 'Escape'
				showDirectory = !showDirectory
		{ capture: true }
	addEventListener 'popstate',
		(e) => urlState = new URLState()

	setInterval(
		-> ratelimitCount = LS.calls.split(',').length,
		6000
	)


{#if urlState.page === 'logging-in'}
	{#await urlState.finishLogin}
		LoggingIn
	{:then}
		svelte:self
{:else}
	{#if urlState.page === 'front' || urlState.page === 'channel'}
		Channel(channel={urlState.channel})
	{#if showDirectory}
		ChannelDirectory
	#ratelimit {ratelimitCount}

style.
	#ratelimit
		position fixed
		top 0
		right 0
		color blue
		font bold 16px monospace